{"version":3,"sources":["config/eats.js","i18n.js","components/random-card/index.js","components/language-picker/index.js","components/background-audio/index.js","App.js","registerServiceWorker.js","index.js","assets/img/mexican.jpg","assets/img/japanese.png","assets/img/indian.jpg","assets/img/italian.jpg","assets/img/blockhouse.jpg","assets/snd/indian.mp3","assets/snd/japanese.mp3","assets/snd/italian.mp3","assets/snd/mexican.mp3","assets/snd/blockhouse.mp3"],"names":["Eats","text","snd","indianSnd","img","indianImg","japaneseSnd","japaneseImg","italianSnd","italianImg","mexicanSnd","mexicanImg","blockhouseSnd","blockhouseImg","languages","pt","name","translation","en","icon","de","i18n","use","LanguageDetector","initReactI18next","init","resources","fallbackLng","whitelist","Object","keys","debug","process","interpolation","escapeValue","withTranslation","withStyles","media","height","paddingTop","heading","textAlign","textTransform","cardActions","display","justifyContent","props","t","classes","randomEat","onClickGetAnotherRandomEat","react_default","a","createElement","Card_default","CardMedia_default","className","image","title","CardContent_default","Typography_default","gutterBottom","variant","component","food","toUpperCase","CardActions_default","Button_default","size","color","onClick","LanguagePicker","state","open","handlers","toggleOpen","_this","setState","_ref","close","lang","_this2","this","changeLanguage","_this3","_this$props","SpeedDial_default","ariaLabel","Language_default","onClose","direction","entries","map","_ref2","_ref3","slicedToArray","key","value","SpeedDialAction_default","country2emoji","tooltipTitle","getClickHandler","Component","country_code","cc","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","test","String","fromCodePoint","apply","concat","c","charCodeAt","BackgroundAudio","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","arguments","inherits","createClass","nextProps","nextState","nextContext","src","loop","audio","Audio","play","pause","load","undefined","App","onClickGetRandomEat","max","index","Math","floor","random","getRandomElement","background_audio_BackgroundAudio","random_card","language_picker_LanguagePicker","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e65a7986.chunk.js","sourcesContent":["import mexicanImg from '../assets/img/mexican.jpg'\nimport japaneseImg from '../assets/img/japanese.png'\nimport indianImg from '../assets/img/indian.jpg'\nimport italianImg from '../assets/img/italian.jpg'\nimport blockhouseImg from '../assets/img/blockhouse.jpg'\n\nimport indianSnd from '../assets/snd/indian.mp3'\nimport japaneseSnd from '../assets/snd/japanese.mp3'\nimport italianSnd from '../assets/snd/italian.mp3'\nimport mexicanSnd from '../assets/snd/mexican.mp3'\nimport blockhouseSnd from '../assets/snd/blockhouse.mp3'\n\nconst Eats = [{\n    text: \"Indiano\",\n    snd: indianSnd,\n    img: indianImg\n},{\n    text: \"Japones\",\n    snd: japaneseSnd,\n    img: japaneseImg\n},{\n    text: \"Italiano\",\n    snd: italianSnd,\n    img: italianImg\n},{\n    text: \"Mexicano\",\n    snd: mexicanSnd,\n    img: mexicanImg\n},{\n    text: \"Blockhouse\",\n    snd: blockhouseSnd,\n    img: blockhouseImg\n}];\n\nexport { Eats }\n","import i18n from 'i18next'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport { initReactI18next } from 'react-i18next'\n\nimport pt from './lang/pt.json'\nimport en from './lang/en.json'\nimport de from './lang/de.json'\n\nexport const languages = {\n  pt: {\n    name: 'PortuguÃªs',\n    translation: pt,\n  },\n  en: {\n    name: 'English',\n    icon: 'gb',\n    translation: en,\n  },\n  de: {\n    name: 'Deutsche',\n    translation: de,\n  },\n}\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources: languages,\n    fallbackLng: 'pt',\n    whitelist: Object.keys(languages),\n    debug: process.env.NODE_ENV === 'development',\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  })\n\nexport default i18n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withTranslation } from 'react-i18next'\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  heading: {\n    textAlign: 'center',\n    textTransform: 'uppercase'\n  },\n  cardActions: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n};\n\nfunction RandomCard(props) {\n  const { t, classes, randomEat, onClickGetAnotherRandomEat } = props;\n  return (\n    <Card>\n        <CardMedia\n            className={classes.media}\n            image={randomEat.img}\n            title={randomEat.text}\n        />\n        <CardContent>\n            <Typography className={classes.heading} gutterBottom variant=\"headline\" component=\"h1\">\n            {t('baza', { food: t(randomEat.text) }).toUpperCase()}\n            </Typography>\n        </CardContent>\n        <CardActions className={classes.cardActions}>\n            <Button size=\"small\" color=\"primary\" onClick={onClickGetAnotherRandomEat}>\n            Get another random eat\n            </Button>\n        </CardActions>\n    </Card>\n  );\n}\n\nRandomCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withTranslation()(\n  withStyles(styles)(\n    RandomCard\n  )\n);\n","import React, { Component } from 'react'\nimport SpeedDial from '@material-ui/lab/SpeedDial'\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction'\nimport LanguageIcon from '@material-ui/icons/Language'\n\nexport default class LanguagePicker extends Component {\n  state = {\n    open: false,\n  }\n\n  handlers = {}\n\n  getClickHandler (lang) {\n    if (!this.handlers[lang]) {\n      const { i18n } = this.props\n\n      this.handlers[lang] = () => {\n        i18n.changeLanguage(lang)\n        this.close()\n      }\n    }\n\n    return this.handlers[lang]\n  }\n\n  toggleOpen = () => {\n    this.setState(({ open }) => ({ open: !open }))\n  }\n\n  close = () => {\n    this.setState({ open: false })\n  }\n\n  render () {\n    const { className, languages } = this.props\n    const { open } = this.state\n\n    return (\n      <SpeedDial\n        ariaLabel=\"Pick Language\"\n        icon={<LanguageIcon />}\n        onClick={this.toggleOpen}\n        onClose={this.close}\n        open={open}\n        direction=\"up\"\n        className={className}\n      >\n        {Object.entries(languages).map(\n          ([key, value]) => (\n            <SpeedDialAction\n              key={key}\n              icon={country2emoji(value.icon || key)}\n              tooltipTitle={value.name}\n              onClick={this.getClickHandler(key)}\n            />\n          ),\n        )}\n      </SpeedDial>\n    )\n  }\n}\n\n// Assume the country_code is a ISO 3166-1 alpha-2 string (eg: \"US\")\nfunction country2emoji (country_code) {\n  const OFFSET = 127397\n  const cc = country_code.toUpperCase()\n\n  function _toConsumableArray (arr) {\n    if (Array.isArray(arr)) {\n      let i, arr2\n      for (i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i]\n      }\n      return arr2\n    } else {\n      return Array.from(arr)\n    }\n  }\n\n  return /^[A-Z]{2}$/.test(cc) ?\n    String.fromCodePoint.apply(String, _toConsumableArray([].concat(_toConsumableArray(cc)).map(c => c.charCodeAt() + OFFSET)))\n    : null\n}\n","import { Component } from 'react'\n\nexport class BackgroundAudio extends Component {\n  shouldComponentUpdate (nextProps, nextState, nextContext) {\n    return false\n  }\n\n  componentDidMount () {\n    const { src, loop } = this.props\n    this.audio = new Audio(src)\n    this.audio.loop = loop\n    this.audio.play()\n  }\n\n  componentWillUnmount () {\n    this.audio.pause()\n    this.audio.src = ''\n    this.audio.load()\n    this.audio = undefined\n  }\n\n  render () {\n    return null\n  }\n}\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport './App.css';\n\nimport { Eats } from './config/eats'\nimport i18n, { languages } from './i18n'\nimport RandomCard from './components/random-card'\nimport LanguagePicker from './components/language-picker'\nimport { BackgroundAudio } from './components/background-audio'\n\nclass App extends Component {\n  state = {}\n\n  onClickGetRandomEat = () => {\n    const randomEat = getRandomElement(Eats);\n    this.setState({randomEat})\n  }\n\n  render() {\n    const {randomEat} = this.state;\n    return (\n      <div className=\"App\">\n        {randomEat &&\n          <div className=\"RandomEat\">\n            <BackgroundAudio src={randomEat.snd} key={`snd-${randomEat.text}`} loop={true} />\n            <RandomCard randomEat={randomEat} onClickGetAnotherRandomEat={this.onClickGetRandomEat} />\n          </div>\n        }\n        {!randomEat &&\n          <div>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.onClickGetRandomEat}>\n              Get random Eat !\n            </Button>\n          </div>\n        }\n\n        <LanguagePicker\n          className=\"Fab\"\n          i18n={i18n}\n          languages={languages}\n        />\n      </div>\n    );\n  }\n}\n\nfunction getRandomElement(arr) {\n  let max = arr.length;\n  let index = Math.floor(Math.random() * Math.floor(max));\n  return arr[index];\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport './i18n'\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/mexican.06d95b88.jpg\";","module.exports = __webpack_public_path__ + \"static/media/japanese.5a156a51.png\";","module.exports = __webpack_public_path__ + \"static/media/indian.bf545a28.jpg\";","module.exports = __webpack_public_path__ + \"static/media/italian.4f507865.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blockhouse.da9e71f5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/indian.0d0c4af0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/japanese.0566c765.mp3\";","module.exports = __webpack_public_path__ + \"static/media/italian.2c08b94e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/mexican.b7d76af4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/blockhouse.f2afec55.mp3\";"],"sourceRoot":""}